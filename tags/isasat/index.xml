<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Isasat on Webpage of Mathias Fleury</title>
    <link>https://m-fleury.github.io/tags/isasat/</link>
    <description>Recent content in Isasat on Webpage of Mathias Fleury</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Sep 2024 21:04:00 +0200</lastBuildDate>
    <atom:link href="https://m-fleury.github.io/tags/isasat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IsaSAT Releases</title>
      <link>https://m-fleury.github.io/isasat/isasat-release/</link>
      <pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://m-fleury.github.io/isasat/isasat-release/</guid>
      <description>&lt;h2 id=&#34;h:2024-sc2024&#34;&gt;SAT Competition 2024&lt;/h2&gt;&#xA;&lt;p&gt;There is not much to tell for the &lt;a href=&#34;../../src/isasat/isasat-sc2024.tar.xz&#34;&gt;release&lt;/a&gt; for this year of the SAT&#xA;Competition 2024. This year, I finished last, exactly as&#xA;expected. However, I am very close to the second-to-last on SAT&#xA;benchmarks.&lt;/p&gt;&#xA;&lt;p&gt;My main performance problem seems to be UNSAT problems, which I blame&#xA;on missing preprocessing. I intended to implement variable elimination&#xA;based on the model reconstruction implemented in Katharina Wagner&amp;rsquo;s&#xA;Master&amp;rsquo;s thesis in Isabelle. I actually started to implement it, but,&#xA;as usual, once I went to proofs, things became more complicated. But&#xA;it is interesting.&lt;/p&gt;</description>
    </item>
    <item>
      <title>IsaSAT</title>
      <link>https://m-fleury.github.io/isasat/isasat/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://m-fleury.github.io/isasat/isasat/</guid>
      <description>&lt;p&gt;IsaSAT is one of the few verified SAT solvers (and to my knowledge the&#xA;only one that is currently maintained). It is verified in Isabelle&#xA;using the Isabelle Refinement Framework by synthesizing code. See &lt;a href=&#34;../isasat-presentation&#34;&gt;the&#xA;presentation&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    <item>
      <title>IsaSAT Presentation</title>
      <link>https://m-fleury.github.io/isasat/isasat-presentation/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://m-fleury.github.io/isasat/isasat-presentation/</guid>
      <description>&lt;p&gt;As part of my PhD thesis, I developed a framework to formalize SAT&#xA;solving. I still continue to expand it. The general organization is&#xA;given by the following graph:&#xA;&lt;img src=&#34;https://m-fleury.github.io/ox-hugo/sat_framework.png&#34; alt=&#34;&#34;&gt;. If you want to have a look at&#xA;the sources, look at the &lt;a href=&#34;https://bitbucket.org/isafol/isafol/src/master/Weidenbach_Book/&#34;&gt;IsaFoL&lt;/a&gt; repository (this is the latest&#xA;bleeding age version, so it is sometimes broken) and the&#xA;&lt;a href=&#34;https://people.mpi-inf.mpg.de/~mfleury/IsaFoL/current/Weidenbach_Book/&#34;&gt;Isabelle-generated HTML documentation&lt;/a&gt; (look at the &amp;ldquo;IsaFoL&amp;rdquo; version at&#xA;the bottom to know the corresponding git ID).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Used Flag</title>
      <link>https://m-fleury.github.io/isasat/isasat-used/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://m-fleury.github.io/isasat/isasat-used/</guid>
      <description>&lt;p&gt;This is the detailed story of my &lt;a href=&#34;https://twitter.com/MathiasFleury12/status/1423620596341084162?s=20&#34;&gt;Tweet&lt;/a&gt; about the used flag.&lt;/p&gt;&#xA;&lt;h2 id=&#34;database-reduction&#34;&gt;Database Reduction&lt;/h2&gt;&#xA;&lt;p&gt;Some background first. CDCLÂ solvers learns clauses. Actually they&#xA;generate way too many clauses to keep all of them. So you have to&#xA;remove them. Actually many of them. This happens during so-called&#xA;&lt;span class=&#34;underline&#34;&gt;reductions&lt;/span&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This comes from the theory of CDCL. There are two way to keep&#xA;completeness: either delay restarts more-and-more or keep&#xA;more-and-more clauses. But this does not tell you which clauses you&#xA;have to keep during reductions.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
