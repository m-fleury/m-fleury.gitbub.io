#+TITLE: Mathias Fleury's web page
#+AUTHOR: Mathias Fleury
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://gongzhitaao.org/orgcss/org.css"/>


This webpage contains documents that I generated, like the
Isabelle documentation from my PhD thesis. This is the only way to
have links which survives changes in my affiliation.


* <<Research>>Research
:PROPERTIES:
:CUSTOM_ID: h:research
:END:
** SAT Solver Framework  :isasat:CDCL:
:PROPERTIES:
:CUSTOM_ID: h:sat-solver-framework
:END:
As part of my PhD thesis, I developed a framework to formalize SAT
solving. I still continue to expend it. It is not a very fast SAT
solver, but you are guaranteed that the answer is correct and that
there is no overflow happening internally that would compromise
correctness.

Please refer to [[./isasat/isasat.org][the IsaSAT page]] for more details.
** SAT Solving                                                          :SAT:
:PROPERTIES:
:CUSTOM_ID: h:sat-solvers
:END:
I work with Armin Biere on SAT solving. One (rather obvious, but never written
down before) result is that the standard minimization algorithm is complete in
the sense that it remove all redundant literals (see more details in our SAT'21
paper). The result comes from a completeness theorem on Horn clauses.

Other interests include:
   + parallel cube-and-conquer SAT solving with the SAT solver [[https://github.com/maximaximal/Paracooba][Paracooba]].
   + normal CDCL with our technique coined *shrinking* that reduces the size of
     learned clauses without increasing their glue. The technique is orthogonal
     to minimization. Shrinking shares the cache used for minimization. 

** Proof Reconstruction
:PROPERTIES:
:CUSTOM_ID: h:proofs
:END:
One very useful tool of the interactive theorem prover Isabelle is the
interaction with automatic theorem provers living outside. These tools come in two flavours:
  + Sledgehammer: what facts do I need to prove this goal?
  + The =smt=-tactic: let Isabelle check the proof you found for this goal!

I worked on integrated [[https://verit.loria.fr/][veriT]] into Sledgehammer during my master thesis, but I am
now mostly focusing on the second approach. I have extended the tactic to
include the SMT solver veriT and I am now working on integrating the SMT solver
cvc5 -- and unlike the work to integrate the Z3 in Isabelle by [[https://www21.in.tum.de/~boehmes/][Böhme]], the
authors of cvc5 (especially [[https://homepages.dcc.ufmg.br/~hbarbosa/][Barbosa]] and Lachnitt) and veriT (especially [[https://schurr.io/about.html][Schurr]])
are helping me to make the proofs nicer and the reconstruction work easier!

In this direction, several people (including me) are attempting to define a
proof format tentatively called Alethe that makes reconstruction easy enough.

** LPAC Checking     :lpac:pastèque:
With Daniela Kaufmann, we worked on (L)PAC checker, one unverified
[[https://danielakaufmann.at/software/][PACheck]] and Pastèque verified in Isabelle. Please refer to [[./pasteque/pasteque.html][this page]]
for more details.

* <<Software>>Software                                      :software:isasat:
:PROPERTIES:
:CUSTOM_ID: h:software
:END:
See [[./src/sources.org]].
* PhD Thesis  :thesis:
:PROPERTIES:
:CUSTOM_ID: h:thesis
:END:
My thesis comes with some fancy Isabelle documentation
[[https://m-fleury.github.io/thesis/doc/Weidenbach_Book/index.html][available here]] and it would be too bad for the
links to get lost. The documentation refers to the =fleury-thesis= branch of IsaFoL available at
[[https://bitbucket.org/isafol/isafol/wiki/Home]]

* External links
:PROPERTIES:
:CUSTOM_ID: h:related-links
:END:
My current webpage can be found at [[http://fmv.jku.at/fleury/index.html]]. This
page might or might not be more up-to-date than this one.
* Academic Duties
:PROPERTIES:
:CUSTOM_ID: h:academic-duties
:END:
** 2021
:PROPERTIES:
:CUSTOM_ID: h:academic-duties-2021
:END:
+ Co-chair of [[http://pxtp.gitlab.io/2021/][PxTP 2021, Seventh Workshop on Proof eXchange for Theorem Proving]]
+ PC of [[https://pdar-workshop.github.io/workshop/][PDAR-21, Parallel and Distributed Automated Reasoning 2021]]
+ PC of [[http://i-cav.org/2021/organization/][CAV 2021-Artifact Evaluation, 33rd International Conference on Computer-Aided Verification]]
+ PC of [[https://etaps.org/2021/tacas][ Artefact Evaluation, 27th International Conference on Tools and Algorithms for the Construction and Analysis of Systems]]
** 2020
:PROPERTIES:
:CUSTOM_ID: h:academic-duties-2020
:END:
+ PC of [[https://tap.sosy-lab.org/2020/][TAP 20- Artefact Evaluation, 14th International Conference on Tests and Proofs 20]]
+ PC of [[https://popl20.sigplan.org/committee/VMCAI-2020-papers-artifact-evaluation-committee][VMCAI-20 - Artefact Evaluation, 21st International Conference on Verification, Model Checking, and Abstract Interpretation]]
** 2019
:PROPERTIES:
:CUSTOM_ID: h:academic-duties-2019
:END:
+ PC of [[http://pxtp.gforge.inria.fr/2019/][PxTP 2019, Seventh Workshop on Proof eXchange for Theorem Proving]]
* Other Projects
:PROPERTIES:
:CUSTOM_ID: h:other-projects
:END:
** Isabelle/emacs
   :PROPERTIES:
   :ID:       isabelle-emacs
   :END:
I work in my free time on Isabelle-emacs available at
https://github.com/m-fleury/isabelle-emacs/. It slightly extends Isabelle's LSP
server (no change is done to Isabelle's kernel nor to Isabelle/jEdit) and make
Isabelle usable for Emacs. If you don't like Isabelle/jEdit or find it unstable
and unusable, this provides an alternative.
** veriT and SPASS
   :PROPERTIES:
   :ID:       veriT
   :END:
Sometimes I try to implement some SAT techniques into the SAT solvers
[[https://verit.loria.fr/][veriT]] and SPASS-SAT used in the SMT solver [[https://www.mpi-inf.mpg.de/departments/automation-of-logic/software/spass-workbench/spass-satt][SPASS-SATT]]