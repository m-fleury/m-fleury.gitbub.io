<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IsaSAT Presentation on Webpage of Mathias Fleury</title>
    <link>https://m-fleury.github.io/isasat/</link>
    <description>Recent content in IsaSAT Presentation on Webpage of Mathias Fleury</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://m-fleury.github.io/isasat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How the used flag was wrong (DRAFT)</title>
      <link>https://m-fleury.github.io/isasat/used-flag/</link>
      <pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://m-fleury.github.io/isasat/used-flag/</guid>
      <description>This is the detailed story of my Tweet about the used flag.
Database Reduction Some background first. CDCLÂ solvers learns clauses. Actually they generate way too many clauses to keep all of them. So you have to remove them. Actually many of them. This happens during so-called reductions.
This comes from the theory of CDCL. There are two way to keep completeness: either delay restarts more-and-more or keep more-and-more clauses. But this does not tell you which clauses you have to keep during reductions.</description>
    </item>
    
    <item>
      <title>IsaSAT Project</title>
      <link>https://m-fleury.github.io/isasat/isasat/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://m-fleury.github.io/isasat/isasat/</guid>
      <description>As part of my PhD thesis, I developed a framework to formalize SAT solving. I still continue to expand it. The general organization is given by the following graph: SAT Solver Framework I start with an abstract specification of CDCL and prove termination and correctness. CDCL is specified as an abstract transition system. I have developped two variants: one based on Nieuwenhuis et al. and a more concrete one based on Weidenbach&amp;rsquo;s version of CDCL.</description>
    </item>
    
  </channel>
</rss>
