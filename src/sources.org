#+HUGO_BASE_DIR: ../../hugo
#+HUGO_SECTION: Sources
#+HUGO_WEIGTH: 2001
#+HUGO_AUTO_SET_LASTMOD: t

#+TITLE: Programs
#+AUTHOR: Mathias Fleury


#+HUGO_TAGS: research
#+HUGO_MENU: :menu "Release" :weight 2001
#+HUGO_CUSTOM_FRONT_MATTER:

#+HUGO_DRAFT: nil

Here the release of my projects that I manage myself (so unlike my changes to, e.g., CaDiCaL).

* <<IsaSAT>>IsaSAT
:PROPERTIES:
:CUSTOM_ID: h:isasat
:END:
** SAT Competition 2022 and v2022-01
:PROPERTIES:
:CUSTOM_ID: h:isasat-sc2022
:EXPORT_DATE: 2022-05-20
:END:
The second release is now [[../../src/isasat/isasat-sc2022-663798f.tar.xz][available]]. It is the version submitted to
the SAT Competition 2022. This year I managed to make IsaSAT work on
StarExec.

Shortly after the SAT Competition deadline, while drinking tea and
looking at the [[https://people.mpi-inf.mpg.de/~mfleury/IsaFoL/current/Weidenbach_Book/IsaSAT/][HTML generated documentation]], I found two heuristics bugs,
which are solved in the [[../../src/isasat/isasat-v2022_01-30966c1.tar.xz][release v2022-01]]. According to my benchmarks it solves
23 more problems on the benchmarks from the SAT Competition 2021.
** 2021: EDA Challenge
:PROPERTIES:
:CUSTOM_ID: h:isasat-eda-challenge
:END:
This the first official release of the IsaSAT in LLVM IR. See the
[[../../../src/isasat/isasat-eda2021-edcd29d.tar.xz][sources]] and the system description submitted at the EDA Challenge for
a list of changes compared to IsaSAT in Standard ML.

The main difference compared to the Standard ML version developped in my PhD is
that the Isabelle theorem is now incomplete (this was implicit earlier in the
sense that it is a limit of the compiler, not a limit of the program) and that
the new version is much faster.

* <<IsaSAT-ML>>IsaSAT in Standard ML
:PROPERTIES:
:CUSTOM_ID: h:isasat-ml
:END:
This is the last version of our IsaSAT sources in Standard ML:
[[~/src/isasat-ML/isasat-ml-last.tar.xz][Sources]]. The compiler MLton is the only compiler we tried that offers
reasonnable performance.

* <<Pasteque>> Pastèque
** Pastèque 2
Pastèque 2 is available on the [[https://bitbucket.org/isafol/isafol/src/master/PAC_Checker2/][IsaFoL repository]] and the HTML
generation can be [[https://people.mpi-inf.mpg.de/~mfleury/IsaFoL/current/PAC_Checker2/][seen]] too. The source code can be found [[http://fmv.jku.at/lpac/][here]].
** Pastèque 1
The release is also available [[http://fmv.jku.at/pacheck_pasteque/][here]] with the unverified checker PACheck.
